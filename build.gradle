plugins {
  id 'com.enonic.defaults' version "1.0.3"
  id 'com.enonic.xp.run' version '1.0.11' // provides xp.enonicRepo()
  id 'com.moowork.node' version "1.2.0"
  id 'java' // provides compile()
  //id 'maven' // Needed for uploadArchives?
  id 'maven-publish' // provides publishing() needed to download dependencies
}


repositories {
    //mavenLocal()
    jcenter()
    xp.enonicRepo()
}


node {
    version '8.9.4'
    download true
}


dependencies {
    compile "com.enonic.xp:lib-admin:${xpVersion}"
    compile "com.enonic.xp:lib-auth:${xpVersion}"
    compile "com.enonic.xp:lib-common:${xpVersion}"
    compile "com.enonic.xp:lib-content:${xpVersion}"
    compile "com.enonic.xp:lib-context:${xpVersion}"
    compile "com.enonic.xp:lib-event:${xpVersion}"
    compile "com.enonic.xp:lib-i18n:${xpVersion}"
    compile "com.enonic.xp:lib-io:${xpVersion}"
    compile "com.enonic.xp:lib-mail:${xpVersion}"
    compile "com.enonic.xp:lib-mustache:${xpVersion}"
    compile "com.enonic.xp:lib-node:${xpVersion}"
    compile "com.enonic.xp:lib-portal:${xpVersion}"
    compile "com.enonic.xp:lib-repo:${xpVersion}"
    compile "com.enonic.xp:lib-task:${xpVersion}"
    compile "com.enonic.xp:lib-thymeleaf:${xpVersion}"
    compile "com.enonic.xp:lib-value:${xpVersion}"
    compile "com.enonic.xp:lib-websocket:${xpVersion}"
}


sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            //srcDir 'src/main/resources'
            srcDir './non-existant'
            //exclude '*.js' // Path relative to srcDir
            //exclude '**/*.js' // Path relative to srcDir
        }
    }
}


tasks.withType(Copy) {
  includeEmptyDirs = false
}


task test(type:Exec, overwrite: true) {
    executable 'npm'
    args 'run', 'test'
}
//build.dependsOn test
//build.mustRunAfter test


task webpack(type:NodeTask) {
    script = file('node_modules/webpack/bin/webpack.js')
    args = [
        '--config', 'webpack.config.babel.js'
    ]
}
webpack.dependsOn npmInstall
assemble.dependsOn webpack
assemble.mustRunAfter webpack


task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
